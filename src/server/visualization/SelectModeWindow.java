/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package server.visualization;

import ca.CellSpace;
import computing.node.ComputingNode;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import server.ServerController;
import server.ServerMain;
import server.SimulationController;

/**
 *
 * @author Lukasz
 */
public class SelectModeWindow extends javax.swing.JFrame {

    /**
     * Creates new form SelectModeWindow
     */
    public SelectModeWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        ServerRadioButton = new javax.swing.JRadioButton();
        NodeRadioButton = new javax.swing.JRadioButton();
        StartButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(200, 200));
        setMinimumSize(new java.awt.Dimension(200, 200));
        setPreferredSize(new java.awt.Dimension(200, 200));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select mode");

        buttonGroup1.add(ServerRadioButton);
        ServerRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ServerRadioButton.setText("Server");
        ServerRadioButton.setToolTipText("Start in server mode");
        ServerRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ServerRadioButtonItemStateChanged(evt);
            }
        });

        buttonGroup1.add(NodeRadioButton);
        NodeRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        NodeRadioButton.setText("Node");
        NodeRadioButton.setToolTipText("Start as computing node");
        NodeRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NodeRadioButtonItemStateChanged(evt);
            }
        });

        StartButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StartButton.setText("START");
        StartButton.setEnabled(false);
        StartButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NodeRadioButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ServerRadioButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(StartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ServerRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NodeRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StartButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ServerRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ServerRadioButtonItemStateChanged
        StartButton.setEnabled(true);
    }//GEN-LAST:event_ServerRadioButtonItemStateChanged

    private void NodeRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NodeRadioButtonItemStateChanged
        StartButton.setEnabled(true);
    }//GEN-LAST:event_NodeRadioButtonItemStateChanged

    private void StartButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartButtonMouseClicked
        if (ServerRadioButton.isSelected()) {
            final MyWindow window = new MyWindow();
            CellSpace newSpace = new CellSpace(100, 100, 100);
            SimulationController simulationController = new SimulationController(newSpace, 100, 0);
            simulationController.init(SimulationController.PREDEFINED_CONDITIONS.Ball);
            ServerController serverController = new ServerController(newSpace);
            window.setSimulationController(simulationController);
            window.setServerController(serverController);
//            try {
//                serverController.createRmiRegistry();
//            } catch (RemoteException ex) {
//                Logger.getLogger(ServerMain.class.getName()).log(Level.SEVERE, null, ex);
//            }
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    window.setVisible(true);
                }
            });
        } else {
            try {
                ComputingNode.main(null);
            } catch (Exception ex) {
                Logger.getLogger(SelectModeWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_StartButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectModeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectModeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectModeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectModeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectModeWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton NodeRadioButton;
    private javax.swing.JRadioButton ServerRadioButton;
    private javax.swing.JButton StartButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
